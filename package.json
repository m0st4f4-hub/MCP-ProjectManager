{
  "name": "mcp-project-manager-cli",
  "version": "1.1.3",
  "description": "MCP + WebGUI = Collaborative Agent & Human Project Management Platform. Where agents and humans manage projectsâ€”together.",
  "bin": {
    "mcp-project-manager": "./cli.js"
  },
  "scripts": {
    "predev": "powershell -NoProfile -Command \"$ports = @(8000, 3000); foreach ($port in $ports) { try { $process = Get-NetTCPConnection -LocalPort $port -ErrorAction SilentlyContinue; if ($process) { Stop-Process -Id $process.OwningProcess -Force -ErrorAction SilentlyContinue; Write-Host ('Killed process on port ' + $port) } else { Write-Host ('No process found on port ' + $port) } } catch { Write-Host $_.Exception.Message } }; exit 0\"",
    "start": "node cli.js",
    "dev": "dev_launcher.bat",
    "dev:backend": "cd backend && .venv\\Scripts\\python.exe -m uvicorn main:app --host 0.0.0.0 --port 8000 --reload",
    "dev:backend:full": "backend\\.venv\\Scripts\\python.exe -m uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload",
    "dev:frontend": "cd frontend && npm run dev",
    "test:backend": "cd backend && .venv\\Scripts\\pytest.exe tests\\test_async_example.py -v",
    "lint:frontend": "cd frontend && npx eslint . --ext .js,.jsx,.ts,.tsx --config ./eslint.config.cjs --format json --output-file ../eslint_report.json",
    "watch:pack": "nodemon --watch cli.js --watch package.json --watch .npmignore --watch .cursor/rules --ext js,json,mdc --exec \"npm pack\"",
    "build:all": "cd frontend && npm run build && cd .. && backend\\.venv\\Scripts\\python.exe -m pip install -r backend\\requirements.txt",
    "type-check": "npm --prefix frontend run type-check",
    "fix": "cd frontend && npm run fix",
    "format": "cd frontend && npm run format",
    "generate": "python scripts/generate_ts_enums.py",
    "update-readmes": "python scripts/update_readmes.py",
    "prettier:check": "prettier --check .",
    "prettier:write": "prettier --write ."
  },
  "keywords": [
    "project-management",
    "MCP",
    "webgui",
    "collaborative",
    "agent",
    "automation",
    "AI",
    "cli"
  ],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@wonderwhy-er/desktop-commander": "^0.1.39"
  },
  "devDependencies": {
    "typescript": "^5.8.3"
  }
}
