/* frontend/src/components/TaskItem.module.css */

.taskItemContainer {
    display: flex;
    padding: var(--chakra-space-4);
    border-radius: var(--chakra-radii-md);
    border-width: 1px;
    border-style: solid;
    border-color: var(--chakra-colors-border-primary, #E2E8F0);
    box-shadow: var(--chakra-shadows-sm);
    transition: all 0.2s ease-in-out;
    position: relative;
    overflow: hidden; /* Keep hidden for _before pseudo-element if it extends */
    background-color: var(--chakra-colors-task-item-bg, var(--chakra-colors-bg-surface, white)); /* Default task item bg */
}

.taskItemContainerCompleted {
    background-color: var(--chakra-colors-task-item-completed-bg, var(--chakra-colors-bg-subtle, #F7FAFC));
}

.taskItemContainerCompact {
    padding: var(--chakra-space-2);
}

/* Left accent border */
.taskItemContainer::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    width: 4px; /* Width of the accent bar */
    background-color: var(--chakra-colors-gray-300, #CBD5E0); /* Default non-status border accent */
    transition: background-color 0.2s ease-in-out;
}

.taskItemContainer:hover {
    box-shadow: var(--chakra-shadows-md);
    transform: translateY(-1px);
    /* Dynamic border color on hover will be tricky. This sets a general hover border. */
    /* border-color: var(--chakra-colors-border-hover, var(--chakra-colors-blue-400)); */
}

/* Specific status accent colors for the left border - applied by adding these classes to taskItemContainer */
.accentToDo::before { background-color: var(--chakra-colors-blue-500, #3182CE); }
.accentInProgress::before { background-color: var(--chakra-colors-yellow-500, #D69E2E); }
.accentBlocked::before { background-color: var(--chakra-colors-red-500, #E53E3E); }
.accentPending::before { background-color: var(--chakra-colors-orange-500, #DD6B20); }
.accentCompleted::before { background-color: var(--chakra-colors-green-500, #38A169); }
.accentDefault::before { background-color: var(--chakra-colors-gray-500, #718096); } /* Fallback */


.taskContentHStack {
    display: flex;
    align-items: flex-start;
    width: 100%;
    gap: var(--chakra-space-3);
}

.taskCheckboxContainer {
    /* Container for checkbox for alignment purposes */
    padding-top: var(--chakra-space-0-5); /* Align checkbox with first line of text slightly better */
}


.taskInfoVStack {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    flex-grow: 1;
    min-width: 0; /* For truncation */
    gap: var(--chakra-space-1);
}
.taskInfoVStackCompact {
    gap: var(--chakra-space-0-5);
}

.titleContainer {
    display: flex;
    width: 100%;
    justify-content: space-between;
    align-items: center;
    gap: var(--chakra-space-2);
}

.taskTitle {
    font-size: var(--chakra-fontSizes-md);
    font-weight: var(--chakra-fontWeights-medium);
    color: var(--chakra-colors-text-primary, black);
    cursor: default;
}
.taskTitleEditable {
    cursor: pointer;
}
.taskTitleCompact {
    font-size: var(--chakra-fontSizes-sm);
}
.taskTitleCompleted {
    color: var(--chakra-colors-text-disabled, #A0AEC0);
    text-decoration: line-through;
}

.titleInput {
    background-color: transparent;
    border: none;
    border-bottom: 1px solid var(--chakra-colors-border-input, #CBD5E0);
    padding: 0;
    margin:0; /* Reset margin */
    font-size: inherit; /* Inherit from .taskTitle or .taskTitleCompact */
    font-weight: inherit;
    color: inherit;
    flex-grow: 1;
    outline: none;
}
.titleInput:focus {
    border-bottom-color: var(--chakra-colors-border-focus, var(--chakra-colors-blue-500));
}


.descriptionText {
    font-size: var(--chakra-fontSizes-sm);
    color: var(--chakra-colors-text-secondary, #718096);
}
.descriptionTextCompact {
    font-size: var(--chakra-fontSizes-xs);
}
.descriptionTextCompleted {
    color: var(--chakra-colors-text-disabled, #A0AEC0);
}

.descriptionTextarea {
    background-color: transparent;
    border: none;
    border-bottom: 1px solid var(--chakra-colors-border-input, #CBD5E0);
    padding: 0;
    margin: 0;
    font-size: inherit; /* Inherit from .descriptionText or .descriptionTextCompact */
    color: inherit;
    width: 100%;
    outline: none;
    resize: none; /* Commonly disabled for inline-like textareas */
}
.descriptionTextarea:focus {
    border-bottom-color: var(--chakra-colors-border-focus, var(--chakra-colors-blue-500));
}

.tagsContainer {
    display: flex;
    gap: var(--chakra-space-2);
    margin-top: var(--chakra-space-2);
    flex-wrap: wrap;
}
.tagsContainerCompact {
    margin-top: var(--chakra-space-1);
    gap: var(--chakra-space-1);
}

.taskTag {
    border-radius: var(--chakra-radii-full);
    font-size: var(--chakra-fontSizes-xs); 
    padding: var(--chakra-space-0-5) var(--chakra-space-2);
    display: inline-flex;
    align-items: center;
    gap: var(--chakra-space-1);
    font-weight: var(--chakra-fontWeights-medium);
    /* Base subtle variant colors - can be overridden by specific status colors */
    background-color: var(--chakra-colors-gray-100);
    color: var(--chakra-colors-gray-800);
}

/* Specific Status Tag Styles - these will override .taskTag bg/color */
.statusTagToDo { background-color: var(--chakra-colors-blue-100, #EBF8FF); color: var(--chakra-colors-blue-800, #2A69AC); }
.statusTagInProgress { background-color: var(--chakra-colors-yellow-100, #FFFFF0); color: var(--chakra-colors-yellow-800, #744210); }
.statusTagBlocked { background-color: var(--chakra-colors-red-100, #FFF5F5); color: var(--chakra-colors-red-800, #9B2C2C); }
.statusTagPending { background-color: var(--chakra-colors-orange-100, #FFF हिंदुAF0); color: var(--chakra-colors-orange-800, #9C4221); }
.statusTagCompleted { background-color: var(--chakra-colors-green-100, #F0FFF4); color: var(--chakra-colors-green-800, #276749); }
.statusTagDefault { background-color: var(--chakra-colors-gray-100, #F7FAFC); color: var(--chakra-colors-gray-800, #1A202C); }

.projectTag { /* Example for a specific type of tag, if needed */
    background-color: var(--chakra-colors-purple-100, #E9D8FD);
    color: var(--chakra-colors-purple-800, #553C9A);
}
.agentTag {
    background-color: var(--chakra-colors-teal-100, #E6FFFA);
    color: var(--chakra-colors-teal-800, #234E52);
}

.agentAvatar {
    /* size="xs" means 1rem by default in Chakra */
    width: 1rem;
    height: 1rem;
    border-radius: var(--chakra-radii-full);
    margin-right: var(--chakra-space-1);
    /* Avatar component will handle image/fallback text */
}

.controlsFlex {
    display: flex;
    align-items: center;
    margin-left: var(--chakra-space-2);
    gap: var(--chakra-space-1); /* Spacing for multiple controls */
}

.menuButton {
    background: transparent;
    color: var(--chakra-colors-text-secondary, #718096);
    border: none;
    border-radius: var(--chakra-radii-md);
    padding: var(--chakra-space-1);
    cursor: pointer;
    display: flex; /* To center icon */
    align-items: center;
    justify-content: center;
}
.menuButton:hover {
    background-color: var(--chakra-colors-bg-hover-subtle, #EDF2F7);
    color: var(--chakra-colors-text-primary, black);
}

.menuList {
    background-color: var(--chakra-colors-bg-surface, white);
    border: 1px solid var(--chakra-colors-border-overlay, #E2E8F0);
    box-shadow: var(--chakra-shadows-md);
    border-radius: var(--chakra-radii-md);
    min-width: 200px; /* Increased min-width for better readability */
    padding-top: var(--chakra-space-1);
    padding-bottom: var(--chakra-space-1);
}

.menuItem {
    padding: var(--chakra-space-2) var(--chakra-space-3);
    display: flex;
    align-items: center;
    gap: var(--chakra-space-2);
    font-size: var(--chakra-fontSizes-sm);
    color: var(--chakra-colors-text-primary, black);
    cursor: pointer;
    border-radius: var(--chakra-radii-sm); /* Slight rounding for menu items */
    margin: 0 var(--chakra-space-1); /* Spacing for items within list */
}
.menuItem:hover {
    background-color: var(--chakra-colors-bg-hover-subtle, #EDF2F7);
}
.menuItemDestructive {
    color: var(--chakra-colors-red-600, #C53030);
}
.menuItemDestructive:hover {
    background-color: var(--chakra-colors-red-50, #FFF5F5);
    color: var(--chakra-colors-red-700, #9B2C2C);
}

.expandButton {
    background: transparent;
    color: var(--chakra-colors-icon-secondary, #A0AEC0);
    border: none;
    border-radius: var(--chakra-radii-full);
    padding: var(--chakra-space-1);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
}
.expandButton:hover {
    background-color: var(--chakra-colors-bg-hover-subtle, #EDF2F7);
    color: var(--chakra-colors-icon-primary, #4A5568);
}

.detailsCollapseContent {
    padding-top: var(--chakra-space-3);
    margin-top: var(--chakra-space-3);
    border-top: 1px solid var(--chakra-colors-border-secondary, #E2E8F0);
    width: 100%; /* Ensure it takes full width within the VStack */
}

.detailsGrid {
    display: grid;
    grid-template-columns: max-content 1fr; /* Label and value */
    gap: var(--chakra-space-1) var(--chakra-space-3);
    font-size: var(--chakra-fontSizes-xs);
}

.detailsLabel {
    color: var(--chakra-colors-text-muted, #A0AEC0);
    font-weight: var(--chakra-fontWeights-medium);
    text-align: right;
}

.detailsValue {
    color: var(--chakra-colors-text-primary, black);
    word-break: break-word; /* Prevent long values from breaking layout */
}


/* Agent Assignment Modal (inline) specific styles */
.agentModalList {
    max-height: 200px; /* Limit height for scroll */
    overflow-y: auto;
    margin-top: var(--chakra-space-2);
}
.agentModalListItem {
    padding: var(--chakra-space-2);
    cursor: pointer;
    border-radius: var(--chakra-radii-md);
    font-size: var(--chakra-fontSizes-sm);
}
.agentModalListItem:hover {
    background-color: var(--chakra-colors-bg-hover-subtle, #EDF2F7);
}
.agentModalListItemSelected {
    background-color: var(--chakra-colors-blue-100, #EBF8FF);
    color: var(--chakra-colors-blue-700, #2B6CB0);
    font-weight: var(--chakra-fontWeights-semibold);
}

.inlineEditActions {
    display: flex;
    gap: var(--chakra-space-1);
}

.inlineEditButton {
    background: transparent;
    border: none;
    color: var(--chakra-colors-icon-secondary, #A0AEC0);
    padding: var(--chakra-space-1);
    cursor: pointer;
    border-radius: var(--chakra-radii-md);
    display: flex;
    align-items: center;
    justify-content: center;
}
.inlineEditButton:hover {
    background-color: var(--chakra-colors-bg-hover-subtle, #EDF2F7);
    color: var(--chakra-colors-icon-primary, #4A5568);
}
.inlineEditButtonSave:hover {
    color: var(--chakra-colors-green-500, #38A169);
}
.inlineEditButtonCancel:hover {
    color: var(--chakra-colors-red-500, #E53E3E);
} 