/* frontend/src/components/MCPDevTools.module.css */

.devToolsContainer {
  padding: var(--chakra-space-8); /* p={8} */
}

.mainVStack {
  /* spacing={6} is handled by direct child selector or applying margin to children */
  /* align="stretch" is default for VStack, or use width: 100% on children if needed */
}

.mainHeading { /* For "MCP Dev Tools - API Tester" */
  /* as="h1" size="xl" - semantic and typographic, often kept on component or mapped to global h1 styles */
  /* If specific overrides are needed beyond theme: */
  /* font-size: var(--chakra-fontSizes-xl); */
  /* font-weight: var(--chakra-fontWeights-bold); /* Assuming size="xl" implies bold */
}

.toolDetailsBox {
  border-width: var(--borders-width-xs); /* was 1px */
  border-radius: var(--chakra-radii-lg);
  padding: var(--chakra-space-6); /* p={6} */
  border-style: solid; /* Added for border-width to take effect */
  border-color: var(--chakra-colors-chakra-border-color, var(--colors-borderDecorative)); /* Assuming default border color */
}

.toolDetailsHeading { /* For tool label */
  /* as="h2" size="lg" - semantic/typographic */
  /* font-size: var(--chakra-fontSizes-lg); */
  margin-bottom: var(--chakra-space-4); /* mb={4} */
}

.toolPathText {
  font-size: var(--chakra-fontSizes-sm);
  color: var(--chakra-colors-text-secondary);
  margin-bottom: var(--chakra-space-1); /* mb={1} */
}

.toolDescriptionText {
  margin-bottom: var(--chakra-space-4); /* mb={4} */
  font-style: italic;
}

.parametersVStack {
   /* spacing={4} handled by direct child selector or applying margin to children */
}

.parameterDescriptionText { /* For non-json/boolean param descriptions */
  font-size: var(--chakra-fontSizes-xs);
  color: var(--chakra-colors-text-muted);
  margin-top: var(--chakra-space-1); /* mt={1} */
}

.jsonTextarea {
  /* rows={5} - this is an attribute, not style. Keep on component. */
  font-family: var(--chakra-fonts-mono); /* fontFamily="monospace" */
  min-height: calc(5 * 1.5em); /* Approximate rows={5} visually */
}

.executeButton {
  background-color: var(--chakra-colors-bg-button-primary);
  color: var(--chakra-colors-text-button-primary);
  margin-top: var(--chakra-space-4); /* mt={4} */
}

.executeButton:hover {
  background-color: var(--chakra-colors-bg-button-primary-hover);
}

.responseBox {
  margin-top: var(--chakra-space-6); /* mt={6} */
  border-width: var(--borders-width-xs); /* was 1px */
  border-radius: var(--chakra-radii-lg);
  padding: var(--chakra-space-6); /* p={6} */
  border-style: solid; /* Added for border-width to take effect */
  border-color: var(--chakra-colors-chakra-border-color, var(--colors-borderDecorative)); /* Assuming default border color */
}

.responseHeading { /* For "Response" */
   /* as="h3" size="md" - semantic/typographic */
   /* font-size: var(--chakra-fontSizes-md); */
   margin-bottom: var(--chakra-space-4); /* mb={4} */
}

.errorCodeBlock {
  background-color: var(--chakra-colors-bg-danger-subtle);
  color: var(--chakra-colors-text-critical);
  padding: var(--chakra-space-4); /* p={4} */
  display: block;
  white-space: pre-wrap;
}

.responseCodeBlock {
  padding: var(--chakra-space-4); /* p={4} */
  display: block;
  white-space: pre-wrap;
  max-height: var(--sizing-sm); /* was 400px, --sizing-sm is 24rem (384px) */
  overflow-y: auto;
}

/* For spacing in VStacks if not using direct child margins or Gap property in CSS */
/* It's often cleaner to let Chakra's VStack handle spacing via its `spacing` prop, */
/* or use CSS `gap` if VStacks are replaced with plain divs. */
/* These are commented out as VStack's `spacing` prop is usually preferred. */
/*
.mainVStack > *:not(:last-child) {
  margin-bottom: var(--chakra-space-6); 
}

.parametersVStack > *:not(:last-child) {
  margin-bottom: var(--chakra-space-4); 
}
*/

/* Fallback for .toolSection if needed - removed as it's not used by new styles */
/*
.toolSection {
  /* Styles for sections within the dev tools */
/*
}
*/ 