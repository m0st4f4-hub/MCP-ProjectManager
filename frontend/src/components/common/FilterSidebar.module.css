/* FilterSidebar.module.css */

.filterSidebarContainer {
    width: 100%;
    border-width: 1px;
    border-style: solid;
    border-color: var(--chakra-colors-border-accent, var(--chakra-colors-blue-500)); /* Fallback for border-accent */
    border-radius: var(--chakra-radii-lg);
    background-color: var(--chakra-colors-bg-surface, white);
    padding: 0; /* p={0} was specified */
}

.sidebarVStack {
    width: 100%;
    padding: var(--chakra-space-2);
    padding-top: var(--chakra-space-4);
    display: flex;
    flex-direction: column;
    gap: var(--chakra-space-4); /* For spacing={{ base: 4 }} */
}

@media (min-width: 48em) { /* md breakpoint (768px typically) */
    .sidebarVStack {
        padding: var(--chakra-space-4);
        padding-top: var(--chakra-space-4); /* pt={4} was separate, so keep it unless p overrides */
        gap: var(--chakra-space-6); /* For spacing={{ md: 6 }} */
    }
}

.heading {
    /* size="sm" equivalent */
    font-size: var(--chakra-fontSizes-sm, 0.875rem);
    font-weight: var(--chakra-fontWeights-medium);
    color: var(--chakra-colors-text-secondary, #4A5568);
    margin-bottom: var(--chakra-space-1);
}

.formControl {
    /* No specific styles, acts as a layout block */
    width: 100%; /* Ensure FormControl takes full width if needed */
}

.formLabel {
    font-size: var(--chakra-fontSizes-sm, 0.875rem);
    color: var(--chakra-colors-text-muted, #718096);
    display: block; /* Ensure label is block for margin-bottom to work if needed */
    margin-bottom: var(--chakra-space-1); /* Typical spacing for labels */
}

.inputGroup {
    /* size="sm" for InputGroup implies child Input will also be sm */
    position: relative; /* For InputLeftElement */
}

.inputLeftElement {
    position: absolute;
    left: var(--chakra-space-2);
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    /* pointerEvents: none; keep on component */
    color: var(--chakra-colors-gray-400, #A0AEC0);
}

.searchInput,
.selectControl {
    font-size: var(--chakra-fontSizes-sm, 0.875rem); /* For size=sm */
    padding: var(--chakra-space-2) var(--chakra-space-3); /* Approximate sm input padding */
    height: var(--chakra-sizes-8, 2rem); /* Approximate sm input height */
    border-radius: var(--chakra-radii-md);
    background-color: var(--chakra-colors-bg-input, #FFFFFF);
    border: 1px solid var(--chakra-colors-border-input, #CBD5E0);
    color: var(--chakra-colors-text-input, #2D3748);
    width: 100%;
    box-sizing: border-box;
}
.searchInput::placeholder,
.selectControl::placeholder {
    color: var(--chakra-colors-text-placeholder, #A0AEC0);
}

.searchInput:hover,
.selectControl:hover {
    border-color: var(--chakra-colors-border-hover, var(--chakra-colors-gray-400));
}

.searchInput:focus,
.selectControl:focus {
    border-color: var(--chakra-colors-brand-500, var(--chakra-colors-blue-500)); /* focusBorderColor=brand.500 */
    box-shadow: 0 0 0 1px var(--chakra-colors-brand-500, var(--chakra-colors-blue-500)); /* Simulate Chakra outline */
    outline: none;
}

.formHelperText {
    font-size: var(--chakra-fontSizes-xs, 0.75rem);
    color: var(--chakra-colors-text-subtle, #718096);
    margin-top: var(--chakra-space-1);
}

.switchFormControl {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.switchLabel {
    font-size: var(--chakra-fontSizes-sm, 0.875rem);
    color: var(--chakra-colors-text-muted, #718096);
    margin-bottom: 0; /* mb=0 */
}

.switchElement {
    /* Chakra Switch is complex; this is a placeholder. colorScheme="brand" is hard to replicate directly. */
    /* Basic styling might be inherited. For custom look, would need detailed ::before/::after styles */
}

.sortHeading {
    /* size="xs" equivalent */
    font-size: var(--chakra-fontSizes-xs, 0.75rem);
    font-weight: var(--chakra-fontWeights-medium);
    color: var(--chakra-colors-text-tertiary, #718096);
    margin-top: var(--chakra-space-4);
    margin-bottom: var(--chakra-space-1);
    border-top-width: 1px;
    border-top-style: solid;
    border-top-color: var(--chakra-colors-border-divider, #E2E8F0);
    padding-top: var(--chakra-space-3);
    width: 100%; /* Ensure border spans full width */
}

.sortHStack {
    display: flex;
    gap: var(--chakra-space-2); /* spacing={2} */
    width: 100%;
}

.sortSelect {
    /* Inherits .selectControl styles */
    flex-grow: 1; /* For flex={1} on one of the sort selects */
}

.clearButton {
    /* variant="outline" size="sm" */
    font-size: var(--chakra-fontSizes-sm, 0.875rem);
    padding: var(--chakra-space-2) var(--chakra-space-3); /* Approximate sm button padding */
    height: var(--chakra-sizes-8, 2rem); /* Approximate sm button height */
    border-radius: var(--chakra-radii-md);
    background-color: transparent;
    border: 1px solid var(--chakra-colors-border-primary, #E2E8F0);
    color: var(--chakra-colors-text-link, var(--chakra-colors-blue-500));
    cursor: pointer;
    width: 100%; /* Buttons in sidebar often span full width */
    margin-top: var(--chakra-space-4);
}

.clearButton:hover {
    background-color: var(--chakra-colors-bg-hover-subtle, #EDF2F7);
    border-color: var(--chakra-colors-border-hover, var(--chakra-colors-gray-400));
}

/* Added an explicit empty module.css file previously */
/* Ensure this content replaces any placeholder in FilterSidebar.module.css */ 