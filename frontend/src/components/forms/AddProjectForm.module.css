/* frontend/src/components/forms/AddProjectForm.module.css */

.addProjectFormContainer {
  background-color: var(--chakra-colors-bg-surface);
  padding: var(--chakra-space-6);
  border-radius: var(--chakra-radii-lg);
  box-shadow: var(--chakra-shadows-lg);
  border-width: 1px;
  border-style: solid; /* Added for borderWidth to take effect */
  border-color: var(--chakra-colors-border-base);
}

.formVStack > *:not(style) ~ *:not(style) {
  margin-top: var(--chakra-space-4);
}
.formVStack > *:not(style):not(style) {
  margin-bottom: 0;
}
.formVStack > style ~ style {
  margin-top: var(--chakra-space-4);
}
.formVStack > style:not(style) {
  margin-bottom: 0;
}

.formHeading {
  font-size: var(--chakra-fontSizes-md);
  color: var(--chakra-colors-text-primary);
  margin-bottom: var(--chakra-space-2);
  text-align: center;
  /* Fallback if theme variable is not defined */
  /* font-size: 1.125rem; */
  /* color: #333; */
}

.formLabel {
  color: var(--chakra-colors-text-primary);
  /* Fallback if theme variable is not defined */
  /* color: #333; */
}

.formInput,
.formTextarea {
  background-color: var(--chakra-colors-bg-input);
  color: var(--chakra-colors-text-primary);
  border: 1px solid var(--chakra-colors-border-input);
  /* Fallback if theme variable is not defined */
  /* background-color: #fff; */
  /* color: #333; */
  /* border: 1px solid #ccc; */
}

.formInput:hover,
.formTextarea:hover {
  border-color: var(--chakra-colors-border-input_hover);
  /* Fallback if theme variable is not defined */
  /* border-color: #aaa; */
}

.formInput:focus,
.formTextarea:focus {
  border-color: var(--chakra-colors-border-focus);
  box-shadow: var(--chakra-shadows-outline);
  /* Fallback if theme variable is not defined */
  /* border-color: #3182ce; */
  /* box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.6); */
}

.formInput::placeholder,
.formTextarea::placeholder {
  color: var(--chakra-colors-text-placeholder);
  /* Fallback if theme variable is not defined */
  /* color: #999; */
}

.submitButton {
  background-color: var(--chakra-colors-bg-button-primary);
  color: var(--chakra-colors-text-button-primary);
  width: 100%;
  font-size: var(--chakra-fontSizes-lg); /* Approximating Chakra's size="lg" */
  padding-top: var(--chakra-space-2);    /* Approximating Chakra's size="lg" */
  padding-bottom: var(--chakra-space-2); /* Approximating Chakra's size="lg" */
  padding-left: var(--chakra-space-4);   /* Approximating Chakra's size="lg" */
  padding-right: var(--chakra-space-4);  /* Approximating Chakra's size="lg" */
  height: var(--chakra-sizes-12); /* Approximating Chakra's size="lg" */
  line-height: var(--chakra-lineHeights-tall); /* Approximating Chakra's size="lg" */
  /* Fallback if theme variable is not defined */
  /* background-color: #3182ce; */
  /* color: white; */
}

.submitButton:hover {
  background-color: var(--chakra-colors-bg-button-primary-hover);
  /* Fallback if theme variable is not defined */
  /* background-color: #2b6cb0; */
}

/* Styles for FormControl's error message if needed, though usually handled by Chakra */
/* .formErrorMessage { */
    /* color: var(--chakra-colors-red-500); */
    /* font-size: var(--chakra-fontSizes-sm); */
/* } */

/* Styles to mimic VStack spacing. This is a common way to do it.
   You apply the parent class (formVStack in this case) to the VStack component.
   Chakra's VStack applies margin-top to subsequent children.
*/
.formVStack > *:not(:first-child) {
  /* margin-top: var(--chakra-space-4); */ /* Replaced by more specific selectors above */
}

.formActions {
  /* Styles for form action buttons (submit, cancel) */
} 