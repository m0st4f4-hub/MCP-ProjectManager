/* frontend/src/components/dashboard/CreateProjectModal.module.css */

/* General Modal Styles (can be part of a shared modal style sheet too) */
.modalContent {
    background-color: var(--colors-bgSurface);
    color: var(--colors-textPrimary);
    border: var(--borders-width-xs) var(--borders-style-solid) var(--colors-borderDecorative);
    border-radius: var(--radii-lg);
}

.modalHeader {
    color: var(--colors-textPrimary);
    font-size: var(--typography-fontSizes-lg);
    font-weight: var(--typography-fontWeights-bold);
    padding: var(--spacing-4) var(--spacing-6);
    border-bottom: var(--borders-width-xs) var(--borders-style-solid) var(--colors-borderDecorative);
}

.modalBody {
    padding: var(--spacing-4) var(--spacing-6);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-5);
}

.modalFooter {
    padding: var(--spacing-3) var(--spacing-6);
    border-top: var(--borders-width-xs) var(--borders-style-solid) var(--colors-borderDecorative);
    display: flex;
    justify-content: flex-end;
}

/* Form Specific Styles */
.formField {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-1-5, 0.375rem);
}

.formLabel {
    font-size: var(--typography-fontSizes-sm);
    font-weight: var(--typography-fontWeights-medium);
    color: var(--colors-textSecondary);
}

.formInput,
.formTextarea {
    padding: var(--spacing-2) var(--spacing-3);
    border: var(--borders-width-xs) var(--borders-style-solid) var(--colors-borderInteractive);
    border-radius: var(--radii-md);
    background-color: var(--colors-bgSurface);
    color: var(--colors-textPrimary);
    font-size: var(--typography-fontSizes-base);
    transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.formInput:focus,
.formTextarea:focus {
    border-color: var(--colors-borderInteractiveFocused);
    box-shadow: var(--shadows-outline);
    outline: none;
}

.formInput[aria-invalid="true"],
.formTextarea[aria-invalid="true"] { /* Basic invalid state */
    border-color: var(--colors-borderError);
}
.formInput[aria-invalid="true"]:focus,
.formTextarea[aria-invalid="true"]:focus {
    border-color: var(--colors-borderError);
    box-shadow: 0 0 0 var(--borders-width-xs) var(--colors-borderError);
}

.formError {
    color: var(--colors-textError);
    font-size: var(--typography-fontSizes-sm);
    margin-top: var(--spacing-1);
}

/* Button Styles (using Chakra Button component for now, but can be custom) */
.submitButton {
    /* These rely on Chakra Button props for now, or can be fully custom */
    /* Example of custom styling if not using Chakra Button as base: */
    /* background-color: var(--colors-bgInteractive); */
    /* color: var(--colors-textInverse); */
    /* padding: var(--spacing-2) var(--spacing-4); */
    /* border-radius: var(--radii-md); */
    /* cursor: pointer; */
}
/* .submitButton:hover { background-color: var(--colors-bgInteractiveHover); } */

.cancelButton {
    /* color: var(--colors-textSecondary); */
}
/* .cancelButton:hover { background-color: var(--colors-bgInteractiveSubtleHover); } */ 