"""create_subtasks_table_and_refactor_tasks

Revision ID: f838fc5b702d
Revises: 765f544277ea
Create Date: 2025-05-11 08:19:39.836495

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql # Import if using specific PG types, though not strictly needed for this basic migration


# revision identifiers, used by Alembic.
revision: str = 'f838fc5b702d'
down_revision: Union[str, None] = '765f544277ea'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop the subtasks table if it exists to ensure a clean slate
    op.execute("DROP TABLE IF EXISTS subtasks;")

    op.create_table('subtasks',
        sa.Column('id', sa.String(length=32), nullable=False),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('completed', sa.Boolean(), nullable=False, server_default=sa.false()),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.func.now()),
        sa.Column('updated_at', sa.DateTime(), nullable=True, onupdate=sa.func.now()),
        sa.Column('task_id', sa.String(length=32), nullable=False),
        sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_subtasks_task_id_tasks')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_subtasks'))
    )
    op.create_index(op.f('ix_subtasks_id'), 'subtasks', ['id'], unique=False)
    op.create_index(op.f('ix_subtasks_title'), 'subtasks', ['title'], unique=False)
    
    # Attempt to drop parent_task_id and its index from tasks table
    # Using batch_alter_table for SQLite compatibility
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        try:
            # Try to drop index using the conventional name. 
            # If it was named differently or doesn't exist, this will be caught.
            batch_op.drop_index('ix_tasks_parent_task_id') 
        except Exception as e:
            print(f"Skipping drop_index('ix_tasks_parent_task_id'): {e}")

        try:
            batch_op.drop_column('parent_task_id')
        except Exception as e:
            print(f"Skipping drop_column('parent_task_id'): {e}")

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('parent_task_id', sa.String(length=32), nullable=True))
        batch_op.create_index(op.f('ix_tasks_parent_task_id'), ['parent_task_id'], unique=False)
        batch_op.create_foreign_key('fk_tasks_parent_task_id_tasks', 'tasks', ['parent_task_id'], ['id'])

    op.drop_index(op.f('ix_subtasks_title'), table_name='subtasks')
    op.drop_index(op.f('ix_subtasks_id'), table_name='subtasks')
    op.drop_table('subtasks')
    # ### end Alembic commands ###
